{"ast":null,"code":"var _jsxFileName = \"/home/tofusupreme/code/TofuSupreme/react-weather-app/src/components/forecast/forecast.js\";\nimport React from 'react';\nimport { Accordion, AccordionItem, AccordionItemPanel, AccordionItemButton, AccordionItemHeading } from 'react-accessible-accordion';\nimport './forecast.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEEK_DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; //This code calculates today's date and the rest of the week within the WEEK_DAYS array //\n\nconst Forecast = _ref => {\n  let {\n    data\n  } = _ref;\n  const dayInAWeek = new Date().getDay();\n  const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"title\",\n      children: \" Daily \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      allowZeroExpanded: true,\n      children: data.list.slice(0, 7).map((item, index) => /*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n          children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"daily-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"weather\",\n                className: \"icon-small\",\n                src: `icons/${item.weather[0].icon}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"day\",\n                children: forecastDays[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"description\",\n                children: item.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"min-max\",\n                children: [Math.round(item.main.temp_min), \"\\xB0C / \", \" \", Math.round(item.main.temp_max), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","Accordion","AccordionItem","AccordionItemPanel","AccordionItemButton","AccordionItemHeading","WEEK_DAYS","Forecast","data","dayInAWeek","Date","getDay","forecastDays","slice","length","concat","list","map","item","index","weather","icon","description","Math","round","main","temp_min","temp_max"],"sources":["/home/tofusupreme/code/TofuSupreme/react-weather-app/src/components/forecast/forecast.js"],"sourcesContent":["import React from 'react';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemPanel,\n  AccordionItemButton,\n  AccordionItemHeading\n} from 'react-accessible-accordion';\nimport './forecast.css';\n\nconst WEEK_DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n//This code calculates today's date and the rest of the week within the WEEK_DAYS array //\n\nconst Forecast = ({ data }) => {\n  const dayInAWeek = new Date().getDay();\n  const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek)\n  );\n\n  return (\n    <>\n      <label className=\"title\"> Daily </label>\n      <Accordion allowZeroExpanded>\n        {data.list.slice(0, 7).map((item, index) => (\n          <AccordionItem key={index}>\n            <AccordionItemHeading>\n              <AccordionItemButton>\n                <div className=\"daily-item\">\n                  <img alt=\"weather\" className=\"icon-small\" src={`icons/${item.weather[0].icon}.png`} />\n                  <label className=\"day\">{forecastDays[index]}</label>\n                  {\" \"}\n                  <label className=\"description\">{item.weather[0].description}</label>\n                  {\"\"}\n                  <label className=\"min-max\">\n                    {Math.round(item.main.temp_min)}°C / {\" \"}\n                    {Math.round(item.main.temp_max)}°C\n                  </label>\n                  </div>\n              </AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel></AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n  </>\n)\n}\nexport default Forecast;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,oBALF,QAMO,4BANP;AAOA,OAAO,gBAAP;;;AAEA,MAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAlB,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC7B,MAAMC,UAAU,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAnB;EACA,MAAMC,YAAY,GAAGN,SAAS,CAACO,KAAV,CAAgBJ,UAAhB,EAA4BH,SAAS,CAACQ,MAAtC,EAA8CC,MAA9C,CAAqDT,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmBJ,UAAnB,CAArD,CAArB;EAGA,oBACE;IAAA,wBACE;MAAO,SAAS,EAAC,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,iBAAiB,MAA5B;MAAA,UACGD,IAAI,CAACQ,IAAL,CAAUH,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBI,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,kBACzB,QAAC,aAAD;QAAA,wBACE,QAAC,oBAAD;UAAA,uBACE,QAAC,mBAAD;YAAA,uBACE;cAAK,SAAS,EAAC,YAAf;cAAA,wBACE;gBAAK,GAAG,EAAC,SAAT;gBAAmB,SAAS,EAAC,YAA7B;gBAA0C,GAAG,EAAG,SAAQD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,IAAK;cAA7E;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAO,SAAS,EAAC,KAAjB;gBAAA,UAAwBT,YAAY,CAACO,KAAD;cAApC;gBAAA;gBAAA;gBAAA;cAAA,QAFF,EAGG,GAHH,eAIE;gBAAO,SAAS,EAAC,aAAjB;gBAAA,UAAgCD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBE;cAAhD;gBAAA;gBAAA;gBAAA;cAAA,QAJF,EAKG,EALH,eAME;gBAAO,SAAS,EAAC,SAAjB;gBAAA,WACGC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACO,IAAL,CAAUC,QAArB,CADH,cACwC,GADxC,EAEGH,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACO,IAAL,CAAUE,QAArB,CAFH;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QANF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAgBE,QAAC,kBAAD;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA,GAAoBR,KAApB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AA2BD,CAhCD;;KAAMZ,Q;AAiCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}