{"ast":null,"code":"import _slicedToArray from\"/home/tofusupreme/code/TofuSupreme/react-weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{AsyncPaginate}from\"react-select-async-paginate\";import{geoApiOptions,GEO_API_URL}from\"../../api\";import{jsx as _jsx}from\"react/jsx-runtime\";var Search=function Search(_ref){var onSearchChange=_ref.onSearchChange;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var loadOptions=function loadOptions(inputValue){return fetch(\"\".concat(GEO_API_URL,\"/cities?minPopulation=1000000&namePrefix=\").concat(inputValue),geoApiOptions).then(function(response){return response.json();}).then(function(response){return{options:response.data.map(function(city){return{value:\"\".concat(city.latitude,\" \").concat(city.longitude),label:\"\".concat(city.name,\", \").concat(city.countryCode)};})};});};var handleOnChange=function handleOnChange(searchData){setSearch(searchData);onSearchChange(searchData);};return/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search for city\",debounceTimeout:600,value:search,onChange:handleOnChange,loadOptions:loadOptions});};export default Search;","map":{"version":3,"names":["React","useState","AsyncPaginate","geoApiOptions","GEO_API_URL","Search","onSearchChange","search","setSearch","loadOptions","inputValue","fetch","then","response","json","options","data","map","city","value","latitude","longitude","label","name","countryCode","handleOnChange","searchData"],"sources":["/home/tofusupreme/code/TofuSupreme/react-weather-app/src/components/search/search.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { geoApiOptions, GEO_API_URL } from \"../../api\";\n\nconst Search = ({ onSearchChange }) => {\n\tconst [search, setSearch] = useState(null);\n\n\tconst loadOptions = (inputValue) => {\n\t\treturn fetch(\n\t\t\t`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`,\n\t\t\tgeoApiOptions\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\treturn {\n\t\t\t\t\toptions: response.data.map((city) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: `${city.latitude} ${city.longitude}`,\n\t\t\t\t\t\t\tlabel: `${city.name}, ${city.countryCode}`,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t};\n\t\t\t});\n\t};\n\n\tconst handleOnChange = (searchData) => {\n\t\tsetSearch(searchData);\n\t\tonSearchChange(searchData);\n\t};\n\n\treturn (\n\t\t<AsyncPaginate\n\t\t\tplaceholder=\"Search for city\"\n\t\t\tdebounceTimeout={600}\n\t\t\tvalue={search}\n\t\t\tonChange={handleOnChange}\n\t\t\tloadOptions={loadOptions}\n\t\t/>\n\t);\n};\n\nexport default Search;\n"],"mappings":"0IAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,aAAT,KAA8B,6BAA9B,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,WAA3C,C,2CAEA,GAAMC,OAAM,CAAG,QAATA,OAAS,MAAwB,IAArBC,eAAqB,MAArBA,cAAqB,CACtC,cAA4BL,QAAQ,CAAC,IAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,CAACC,UAAD,CAAgB,CACnC,MAAOC,MAAK,WACRP,WADQ,qDAC+CM,UAD/C,EAEXP,aAFW,CAAL,CAILS,IAJK,CAIA,SAACC,QAAD,QAAcA,SAAQ,CAACC,IAAT,EAAd,EAJA,EAKLF,IALK,CAKA,SAACC,QAAD,CAAc,CACnB,MAAO,CACNE,OAAO,CAAEF,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAkB,SAACC,IAAD,CAAU,CACpC,MAAO,CACNC,KAAK,WAAKD,IAAI,CAACE,QAAV,aAAsBF,IAAI,CAACG,SAA3B,CADC,CAENC,KAAK,WAAKJ,IAAI,CAACK,IAAV,cAAmBL,IAAI,CAACM,WAAxB,CAFC,CAAP,CAIA,CALQ,CADH,CAAP,CAQA,CAdK,CAAP,CAeA,CAhBD,CAkBA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,CAACC,UAAD,CAAgB,CACtClB,SAAS,CAACkB,UAAD,CAAT,CACApB,cAAc,CAACoB,UAAD,CAAd,CACA,CAHD,CAKA,mBACC,KAAC,aAAD,EACC,WAAW,CAAC,iBADb,CAEC,eAAe,CAAE,GAFlB,CAGC,KAAK,CAAEnB,MAHR,CAIC,QAAQ,CAAEkB,cAJX,CAKC,WAAW,CAAEhB,WALd,EADD,CASA,CAnCD,CAqCA,cAAeJ,OAAf"},"metadata":{},"sourceType":"module"}